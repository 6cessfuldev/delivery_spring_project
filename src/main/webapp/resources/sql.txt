create database deliverydb;
use mysql;

-- 유저생성구문
create user 'springUser'@'localhost' identified by 'mysql';

-- 권한생성구문
grant all privileges on deliverydb.* to 'springUser'@'localhost' identified by 'mysql';

-- 변경내용 메모리에 반영(적용완료)
flush privileges;
  
  
## user(회원)

create table user(
user_id varchar(60) not null,
user_email varchar(40) not null,
user_pw varchar(500) not null,
user_name varchar(40) not null,
user_phone varchar(40),
user_birth date,
user_register_date datetime default now(),
user_modify_date datetime,
user_role varchar(20) default "USER",
provider varchar(45),
providerId varchar(45),
primary key(user_id));

## file(파일)
create table file(
file_code int auto_increment,
file_uuid varchar(256),
file_save_dir varchar(256) not null,
file_size int,
file_name varchar(512) not null,
file_type tinyint(1) default 0,
file_reg_date datetime default now(),
primary key(file_code));

## diner(음식점)

create table diner(
diner_code int auto_increment,
file_code int,
diner_name varchar(50) not null,
diner_address varchar(200) not null,
diner_notice text,
diner_open_time time,
diner_close_time time,
diner_min_pay int,
diner_method_pay varchar(20),
diner_business_name varchar(50),
diner_company_num varchar(12),
diner_category varchar(15),
diner_delivery_fee int default 0,
diner_addr_point point,
diner_score_avg double,
diner_review_count int default 0,
FOREIGN KEY (file_code)
REFERENCES file(file_code) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(diner_code));

## food(음식)
create table food(
food_code int auto_increment,
food_name varchar(40) not null,
food_price int not null,
food_intro varchar(100),
food_register_date datetime default now(),
food_state varchar(10) default "N",
file_code int,
diner_code int,
FOREIGN KEY(file_code)
REFERENCES file(file_code) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (diner_code)
REFERENCES diner(diner_code) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(food_code));


## choice(옵션)

create table choice(
choice_code int not null auto_increment,
food_code int not null,
choice_content varchar(45) not null,
choice_price int not null,
FOREIGN KEY (food_code)
REFERENCES food(food_code) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(choice_code));


## basket(장바구니)

create table basket(
basket_code int not null auto_increment,
user_id varchar(60) not null,
food_code int not null,
basket_order_count int not null,
FOREIGN KEY (user_id)
REFERENCES user(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (food_code)
REFERENCES food(food_code) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(basket_code));


## basket_detail(장바구니 상세)  

create table basket_detail(
basket_code int not null,
choice_code int not null,
FOREIGN KEY (basket_code)
REFERENCES basket(basket_code) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (choice_code)
REFERENCES choice(choice_code) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(basket_code));


## login(로그인기록)

create table login(
log_code int auto_increment,
user_id varchar(60) not null,
log_date datetime,
log_out_date datetime,
log_fail_count tinyint(1) not null default 0,
FOREIGN KEY (user_id)
REFERENCES user(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(log_code));


## order(주문내역)

create table `order`(
order_code bigint not null,
order_pg varchar(45) not null,
order_pay_method varchar(45) not null,
order_name varchar(500) not null,
order_amount int not null,
order_buyer_email varchar(100) not null,
order_buyer_name varchar(45) not null,
order_buyer_tel varchar(45) not null,
order_buyer_addr varchar(500) not null,
order_buyer_postcode varchar(30) not null,
order_m_redirect_url varchar(45) not null,
order_niceMobileV2 varchar(20) not null,
order_IMP_UID varchar(100) not null,
diner_code int not null,
FOREIGN KEY (diner_code)
REFERENCES diner(diner_code) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(order_code));


## order_food(주문메뉴)

create table order_food(
order_code bigint not null,
order_food_info varchar(2000) not null
);

## review (리뷰)
	
create table review(
review_code int not null auto_increment,
review_order_code int,
diner_code int,
user_id varchar(60),
review_content text not null,
review_score int,
review_reg_date datetime default now(),
review_mod_date datetime default now(),
review_boss_comment text,
FOREIGN KEY (user_id)
REFERENCES user(user_id) ON UPDATE CASCADE ON DELETE RESTRICT,
FOREIGN KEY (diner_code)
REFERENCES diner(diner_code) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(review_code));


## review_img (리뷰이미지)

create table review_img(
review_img_code int not null auto_increment,
review_code int not null,
review_img_uuid varchar(256),
review_img_save_dir varchar(256) not null,
review_img_size int,
review_img_name varchar(512) not null,
review_img_type tinyint(1) default 0,
review_img_reg_date datetime default now(),
FOREIGN KEY (review_code)
REFERENCES review(review_code) ON UPDATE CASCADE ON DELETE RESTRICT,
primary key(review_img_code));

